version: 2.1

commands:
  install-pnpm:
    steps:
      - run:
          name: Install pnpm
          command: npm install -g pnpm
  install:
    steps:
      - run:
          name: Set auth token
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
      - restore_cache:
          name: 'Restoring cache'
          key: pnpm-hash-{{ checksum "pnpm-lock.yaml" }}
      - run:
          name: 'Install packages'
          command: pnpm install --frozen-lockfile
      - save_cache:
          name: 'Saving cache'
          key: pnpm-hash-{{ checksum "pnpm-lock.yaml" }}
          paths:
            - ~/.local/share/pnpm/store
  run-tests:
    steps:
      - run:
          command: pnpm test
          name: Run tests
      - store_test_results:
          path: test-results
  transpile:
    steps:
      - run:
          name: Transpile
          command: pnpm transpile
  lint:
    steps:
      - run:
          name: Lint
          command: pnpm lint
  verify-exports:
    steps:
      - run:
          command: cd modules/test-all-exports && pnpm verify
          name: Verify exports
  sort-package-json:
    steps:
      - run:
          command: npm add -g sort-package-json
          name: Install sort-package-json
      - run:
          command: |
            pnpm -r exec sort-package-json --check
            pnpm sort-package-json --check
          name: Verify package jsons sorted
jobs:
  test:
    parameters:
      node-version:
        type: string
    docker:
      - image: cimg/node:<< parameters.node-version >>
    steps:
      - checkout
      - install-pnpm
      - install
      - transpile
      - lint
      - run-tests
      - verify-exports
  checks:
    resource_class: small
    docker:
      - image: cimg/node:14.19
    steps:
      - checkout
      - install-pnpm
      - sort-package-json

workflows:
  test-all:
    jobs:
      - checks
      - test:
          matrix:
            parameters:
              node-version: [ '14.19', '16.15' ]
